def pivot_place(list1,first,last):

    pivot = list1[first]

    left = first + 1

    right = last
    print("1" + " " + str(pivot) + " " + str(left) + " " + str(right) + " " + str(list1))

    while True:

        while left<=right and list1[left] <= pivot:

            left = left + 1
            print("2" + " " + str(pivot) + " " + str(left) + " " + str(right) + " " + str(list1))

        while left<=right and list1[right] >= pivot:

            right = right -1
            print("3" + " " + str(pivot) + " " + str(left) + " " + str(right) + " " + str(list1))

        if right < left:
            print("4" + " " + str(pivot) + " " + str(left) + " " + str(right) + " " + str(list1))
            break

        else:

            list1[left],list1[right] = list1[right],list1[left]
            print("5" + " " + str(pivot) + " " + str(left) + " " + str(right) + " " + str(list1))

    list1[first],list1[right] = list1[right],list1[first]
    print("6" + " " + str(pivot) + " " + str(left) + " " + str(right) + " " + str(list1))

    return right

    

def quicksort(list1,first,last):

    if first < last:

        p = pivot_place(list1,first,last)

        quicksort(list1,first,p-1)

        quicksort(list1,p+1,last)

    return list1

    

print(pivot_place([6,4,2,5,3,1,8],0,6))
# print(quicksort([6,4,2,5,3,1,8],0,6))
# print(quicksort([6,4,2,5,3,1,8],0,6))
